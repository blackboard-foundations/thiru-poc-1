name: pr

on:
  pull_request:
    branches:
      - "**"

env:
  GIT_AUTHOR_NAME: github-actions[bot]
  GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: noreply@github.com
  CDK_DEFAULT_ACCOUNT: 111111111111
  CDK_DEFAULT_REGION: us-east-1
  CDK_DEPLOY_STAGES: dev int tp prod
  CDK_DEPLOY_dev_ACCOUNTS: 111111111111
  CDK_DEPLOY_int_ACCOUNTS: 111111111111
  CDK_DEPLOY_tp_ACCOUNTS: 333333333333
  CDK_DEPLOY_prod_ACCOUNTS: 333333333333
  CDK_DEPLOY_dev_111111111111_REGIONS: us-east-1
  CDK_DEPLOY_int_111111111111_REGIONS: us-east-1
  CDK_DEPLOY_tp_333333333333_REGIONS: us-east-1
  CDK_DEPLOY_prod_333333333333_REGIONS: us-east-1

jobs:
  cdk-diff:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install CDK
        run: npm install -g aws-cdk@2

      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          fetch-depth: 0

      - name: Setup Artifactory
        uses: blackboard-innersource/gh-action-setup-artifactory@v2
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Install base dependencies
        run: pip install pip-tools && pip-sync

      - name: CDK synth base
        run: cdk synth -o base.cdk.out

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          clean: false

      - name: Merge base to PR branch
        run: git merge origin/${{ github.base_ref }}

      - name: Install PR branch dependencies
        run: pip-sync

      - name: CDK synth PR branch
        run: cdk synth -o head.cdk.out

      - name: Diff CDK synth outputs
        id: diff
        uses: blackboard-innersource/gh-action-cdk-diff@v1

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: CloudFormation

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: ${{ steps.diff.outputs.comment_file }}
          edit-mode: replace

  # Always run this last as it can push new changes and actions will not rerun.
  pre-commit:
    needs: [cdk-diff]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install PreCommit
        run: pip install pre-commit

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: PreCommit
        id: pre-commit
        run: |
          if SKIP=flake8 pre-commit run --show-diff-on-failure --color=always --all-files; then
            echo "failed=0" >> $GITHUB_OUTPUT
          else
            echo "failed=1" >> $GITHUB_OUTPUT
          fi
          if [ -n "$(git status -s)" ]; then
            echo "dirty=1" >> $GITHUB_OUTPUT
          else
            echo "dirty=0" >> $GITHUB_OUTPUT
          fi

      # Run a second time to verify that everything has indeed been fixed.
      - name: PreCommit verify
        if: steps.pre-commit.outputs.failed == 1
        run: |
          SKIP=flake8 pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Commit and Push to Pull Request
        if: steps.pre-commit.outputs.dirty == 1
        run: |
          git add .
          git status
          git commit -m ":sparkles: :star: Automated commit has been added to your pull request to fix formatting! :star: :sparkles:"
          git push origin ${{ github.head_ref }}

